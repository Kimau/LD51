[gd_resource type="VisualShader" load_steps=10 format=3 uid="uid://eviwogredv80"]

[ext_resource type="Texture2D" uid="uid://8tl2qwf3mp4n" path="res://icons.png" id="1_8quh6"]

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_qc2ye"]
default_input_values = [0, false, 1, 1, 2, 0]
op_type = 1

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_0itdq"]
parameter_name = "spriteSampler"
qualifier = 1
texture_type = 1
texture_filter = 1
texture_repeat = 2

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_eqbro"]
function = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_mrj5b"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_eksdg"]
source = 5
texture = ExtResource("1_8quh6")

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_erea7"]
operator = 2

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_u57e5"]
parameter_name = "ColorParameter"
qualifier = 2

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_53a74"]
default_input_values = [0, 0.0, 1, 0.1, 2, 1e-05]
function = 4

[resource]
code = "shader_type spatial;
global uniform sampler2D spriteSampler : source_color, filter_nearest, repeat_disable;
instance uniform vec4 ColorParameter : source_color;



void fragment() {

	vec4 n_out2p0;
// Texture2D:2
	n_out2p0 = texture(spriteSampler, UV);


// ColorParameter:5
	vec4 n_out5p0 = ColorParameter;


// VectorOp:4
	vec3 n_out4p0 = vec3(n_out2p0.xyz) * vec3(n_out5p0.xyz);


	vec3 n_out13p0;
// ColorFunc:13
	{
		vec3 c = vec3(n_out2p0.xyz);
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		n_out13p0 = vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}


// VectorDecompose:14
	float n_out14p0 = n_out13p0.x;
	float n_out14p1 = n_out13p0.y;
	float n_out14p2 = n_out13p0.z;


// Compare:9
	float n_in9p1 = 0.10000;
	bool n_out9p0 = n_out14p1 < n_in9p1;


	int n_out10p0;
// Switch:10
	int n_in10p1 = 1;
	int n_in10p2 = 0;
	if(n_out9p0)
	{
		n_out10p0 = n_in10p1;
	}
	else
	{
		n_out10p0 = n_in10p2;
	}


// Output:0
	ALBEDO = n_out4p0;
	ALPHA = float(n_out10p0);
	EMISSION = n_out4p0;


}
"
graph_offset = Vector2(-696.332, -266.592)
nodes/fragment/0/position = Vector2(1200, -40)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_eksdg")
nodes/fragment/2/position = Vector2(-120, -80)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorOp_erea7")
nodes/fragment/4/position = Vector2(575.641, 9.2698)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorParameter_u57e5")
nodes/fragment/5/position = Vector2(180, -240)
nodes/fragment/9/node = SubResource("VisualShaderNodeCompare_53a74")
nodes/fragment/9/position = Vector2(620, 200)
nodes/fragment/10/node = SubResource("VisualShaderNodeSwitch_qc2ye")
nodes/fragment/10/position = Vector2(800, 160)
nodes/fragment/12/node = SubResource("VisualShaderNodeTexture2DParameter_0itdq")
nodes/fragment/12/position = Vector2(-600, -60)
nodes/fragment/13/node = SubResource("VisualShaderNodeColorFunc_eqbro")
nodes/fragment/13/position = Vector2(180, 200)
nodes/fragment/14/node = SubResource("VisualShaderNodeVectorDecompose_mrj5b")
nodes/fragment/14/position = Vector2(400, 220)
nodes/fragment/connections = PackedInt32Array(4, 0, 0, 0, 2, 0, 4, 0, 5, 0, 4, 1, 10, 0, 0, 1, 12, 0, 2, 2, 2, 0, 13, 0, 13, 0, 14, 0, 14, 1, 9, 0, 9, 0, 10, 0, 4, 0, 0, 5)
